{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 def matvec_py(m, n, A, x):\
    """\
    Native Python-based matrix-vector multiply, using lists.\
    The dimensions of the matrix A are m-by-n, and x is a\
    vector of length n.\
    """\
    assert type(A) is list and all([type(aij) is float for aij in A])\
    assert type(x) is list\
    assert len(x) >= n\
    assert len(A) >= (m*n)\
\
    y = [0.] * m\
    ###\
    ### YOUR CODE HERE\
    ###\
    #---- Method1: convert A_py list to a 2-d array\
    A_np = np.reshape(A, (m, n), order='F')  \
    for i in range(m):\
        for j in range(n):\
            y[i] = y[i]+A_np[i][j]*x[j]\
    \
    return y}